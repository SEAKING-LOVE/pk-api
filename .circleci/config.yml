version: 2
jobs:
  build:
    working_directory: ~/pk-api
    docker:
      - image: circleci/node:8.7.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install node modules
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  test:
    working_directory: ~/pk-api
    docker:
      - image: circleci/node:8.7.0
    steps:
      - checkout
      - run:
          name: Run tests
          command: echo "No tests for now"

  deployment:
    working_directory: ~/pk-api
    docker:
      - image: circleci/node:8.7.0
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: Fix host authenticity
          command: |
            ssh-keyscan $server_ip >> ~/.ssh/known_hosts
      - deploy:
          name: Deploy to dokku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              [[ ! -e "$(git rev-parse --git-dir)/shallow" ]] || git fetch --unshallow
              git remote add dokku dokku@$server_ip:pk-api
              git push dokku master
            fi
  deploy_success:
    working_directory: ~/pk-api
    docker:
      - image: circleci/node:8.7.0
    steps:
      - checkout
      - add-ssh-keys:
          fingerprints:
            - "$github_write_fingerprint"
      - deploy:
          name: Update production branch
          command: |
            [[ ! -e "$(git rev-parse --git-dir)/shallow" ]] || git fetch --unshallow
            git remote add origin git@github.com:SEAKING-LOVE/pk-api.git
            git push origin production

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
      - deployment:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
      - deploy_success:
          requires:
            - build
            - test
            - deployment
          filters:
            branches:
              only: master

